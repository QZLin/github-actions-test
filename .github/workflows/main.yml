name: CI
permissions:
  # actions: read|write|none
  # checks: read|write|none
  contents: write
  # deployments: read|write|none
  # id-token: read|write|none
  issues: write
  # discussions: read|write|none
  # packages: read|write|none
  # pages: read|write|none
  # pull-requests: read|write|none
  # repository-projects: read|write|none
  # security-events: read|write|none
  # statuses: read|write|none
# Controls when the workflow will run
on:
  issues:
    types:
      - opened
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  github-context:
    name: job-context
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
  job1:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
        working-directory: "working_dir"
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v2.5.0

      - name: Auth gh
        run: echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token

      - name: Execute Script
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        # run: echo "$GITHUB_CONTEXT"
        run: |
          . ../actions.ps1
          . ../issue.ps1

      # - name: Download artifact
      #   id: download-artifact
      #   uses: dawidd6/action-download-artifact@v2
      #   with:
      #     # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
      #     # Required, if the artifact is from a different repo
      #     # Required, if the repo is private a Personal Access Token with `repo` scope is needed
      #     github_token: ${{secrets.GITHUB_TOKEN}}
      #     # Optional, workflow file name or ID
      #     # If not specified, will be inferred from run_id (if run_id is specified), or will be the current workflow
      #     workflow: workflow_name.yml
      #     # Optional, the status or conclusion of a completed workflow to search for
      #     # Can be one of a workflow conclusion:
      #     #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
      #     # Or a workflow status:
      #     #   "completed", "in_progress", "queued"
      #     # Use the empty string ("") to ignore status or conclusion in the search
      #     workflow_conclusion: success
      #     # Optional, will get head commit SHA
      #     pr: ${{github.event.pull_request.number}}
      #     # Optional, no need to specify if PR is
      #     commit: ${{github.event.pull_request.head.sha}}
      #     # Optional, will use the specified branch. Defaults to all branches
      #     branch: master
      #     # Optional, defaults to all types
      #     event: push
      #     # Optional, will use specified workflow run
      #     run_id: 1122334455
      #     # Optional, run number from the workflow
      #     run_number: 34
      #     # Optional, uploaded artifact name,
      #     # will download all artifacts if not specified
      #     # and extract them into respective subdirectories
      #     # https://github.com/actions/download-artifact#download-all-artifacts
      #     name: artifact_name
      #     # Optional, a directory where to extract artifact(s), defaults to the current directory
      #     path: extract_here
      #     # Optional, defaults to current repo
      #     repo: ${{ github.repository }}
      #     # Optional, check the workflow run to whether it has an artifact
      #     # then will get the last available artifact from the previous workflow
      #     # default false, just try to download from the last one
      #     check_artifacts: false
      #     # Optional, search for the last workflow run whose stored an artifact named as in `name` input
      #     # default false
      #     search_artifacts: false
      #     # Optional, choose to skip unpacking the downloaded artifact(s)
      #     # default false
      #     skip_unpack: false
      #     # Optional, choose how to exit the action if no artifact is found
      #     # can be one of:
      #     #  "fail", "warn", "ignore"
      #     # default fail
      #     if_no_artifact_found: fail

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.1
        with:
          name: result
          path: working_dir
